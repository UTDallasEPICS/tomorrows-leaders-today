generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model GrantCategory {
  id             Int     @id @default(autoincrement())
  name           String
  description    String?
  definitionLink String?
  grants         Grant[]
}

model Grant {
  id                Int      @id @default(autoincrement())
  externalId        String   @unique
  title             String
  description       String?
  status            String?
  website           String?
  awardDetails      String?
  interviewRequired Boolean  @default(false)
  rollingBasis      Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  categoryId Int?
  category   GrantCategory? @relation(fields: [categoryId], references: [id])

  timelines    GrantTimeline[]
  requirements ApplicationRequirement[]
  contacts     Contact[]
  stipulations GrantStipulation[]
  fundingLinks GrantFunding[]
}

model GrantTimeline {
  id        Int      @id @default(autoincrement())
  grantId   Int
  grant     Grant    @relation(fields: [grantId], references: [id], onDelete: Cascade)
  eventType String
  eventDate DateTime
  details   String?
}

model ApplicationRequirement {
  id           Int     @id @default(autoincrement())
  grantId      Int
  grant        Grant   @relation(fields: [grantId], references: [id], onDelete: Cascade)
  eligibility  String?
  materials    String?
  instructions String?
  notes        String?
}

model Contact {
  id           Int     @id @default(autoincrement())
  grantId      Int
  grant        Grant   @relation(fields: [grantId], references: [id], onDelete: Cascade)
  contactType  String?
  contactInfo  String?
  availability String?
}

model GrantStipulation {
  id        Int     @id @default(autoincrement())
  grantId   Int
  grant     Grant   @relation(fields: [grantId], references: [id], onDelete: Cascade)
  condition String?
  notes     String?
}

model FundingOpportunity {
  id                  Int       @id @default(autoincrement())
  name                String
  description         String?
  source              String?
  totalFundingAmount  Float?
  maxAwardAmount      Float?
  applicationDeadline DateTime?
  website             String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  grants GrantFunding[]
}

model GrantFunding {
  grantId   Int
  fundingId Int

  grant   Grant              @relation(fields: [grantId], references: [id], onDelete: Cascade)
  funding FundingOpportunity @relation(fields: [fundingId], references: [id], onDelete: Cascade)

  @@id([grantId, fundingId])
}
