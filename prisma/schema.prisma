generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model ApplicationRequirements {
  requirement_id Int     @id @default(autoincrement())
  grant_id       Int
  eligibility    String?
  materials      String?
  instructions   String?
  notes          String?
  Grants         Grants  @relation(fields: [grant_id], references: [grant_id], onDelete: Cascade, onUpdate: NoAction)
}

model Contacts {
  contact_id   Int     @id @default(autoincrement())
  grant_id     Int
  contact_type String?
  contact_info String?
  availability String?
  Grants       Grants  @relation(fields: [grant_id], references: [grant_id], onDelete: Cascade, onUpdate: NoAction)
}

model FundingOpportunities {
  funding_id           Int            @id @default(autoincrement())
  name                 String
  description          String?
  source               String?
  total_funding_amount Float?
  max_award_amount     Float?
  application_deadline DateTime?
  website              String?
  created_at           DateTime?      @default(now())
  updated_at           DateTime?      @default(now())
  GrantFunding         GrantFunding[]
}

model GrantCategories {
  category_id     Int      @id @default(autoincrement())
  name            String
  description     String?
  definition_link String?
  Grants          Grants[]
}

model GrantFunding {
  grant_id             Int
  funding_id           Int
  FundingOpportunities FundingOpportunities @relation(fields: [funding_id], references: [funding_id], onDelete: Cascade, onUpdate: NoAction)
  Grants               Grants               @relation(fields: [grant_id], references: [grant_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([grant_id, funding_id])
}

model GrantStipulations {
  stipulation_id Int     @id @default(autoincrement())
  grant_id       Int
  condition      String?
  notes          String?
  Grants         Grants  @relation(fields: [grant_id], references: [grant_id], onDelete: Cascade, onUpdate: NoAction)
}

model GrantTimelines {
  timeline_id Int      @id @default(autoincrement())
  grant_id    Int
  event_type  String
  event_date  DateTime
  details     String?
  Grants      Grants   @relation(fields: [grant_id], references: [grant_id], onDelete: Cascade, onUpdate: NoAction)
}

model Grants {
  grant_id    Int       @id @default(autoincrement())
  external_id String    @unique
  title       String
  description String?
  status      String?
  website     String?
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  ApplicationRequirements ApplicationRequirements[]
  Contacts                Contacts[]
  GrantStipulations       GrantStipulations[]
  GrantCategories         GrantCategories?          @relation(fields: [category_id], references: [category_id])
  category_id             Int?

  GrantTimelines GrantTimelines[]
  GrantFunding   GrantFunding[]
}
